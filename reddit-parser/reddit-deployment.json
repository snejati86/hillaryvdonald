{
    "kind": "Deployment",
    "apiVersion": "extensions/v1beta1",
    "metadata": {
        "name": "reddit-parser",
        "namespace": "default",
        "selfLink": "/apis/extensions/v1beta1/namespaces/default/deployments/reddit-parser",
        "uid": "8f8ec3ac-18c5-11e6-a64b-42010af0004f",
        "resourceVersion": "22971",
        "generation": 2,
        "creationTimestamp": "2016-05-13T04:45:47Z",
        "labels": {
            "run": "reddit-parser"
        },
        "annotations": {
            "deployment.kubernetes.io/revision": "1"
        }
    },
    "spec": {
        "replicas": 1,
        "selector": {
            "matchLabels": {
                "run": "reddit-parser"
            }
        },
        "template": {
            "metadata": {
                "creationTimestamp": null,
                "labels": {
                    "run": "reddit-parser"
                }
            },
            "spec": {
                "containers": [
                    {
                        "name": "politics",
                        "env": [{
                          "name": "SUBREDDIT",
                          "value":"politics"
                        }],
                        "image": "gcr.io/hillaryvdonald/reddit-parser:v2",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "all",
                        "env": [{
                          "name": "SUBREDDIT",
                          "value":"all"
                        }],
                        "image": "gcr.io/hillaryvdonald/reddit-parser:v2",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "imagePullPolicy": "IfNotPresent"
                    }

                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "securityContext": {}
            }
        },
        "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
                "maxUnavailable": 1,
                "maxSurge": 1
            }
        }
    },
    "status": {
        "observedGeneration": 2,
        "replicas": 1,
        "updatedReplicas": 1,
        "availableReplicas": 1
    }
}
